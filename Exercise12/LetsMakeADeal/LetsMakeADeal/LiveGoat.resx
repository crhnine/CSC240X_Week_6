<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>